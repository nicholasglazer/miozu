# The directory to store the downloaded file.
dir=${HOME}/Downloads
# Downloads the URIs listed in FILE.
input-file=${HOME}/.aria2/aria2.session
# Save error/unfinished downloads to FILE on exit.
save-session=${HOME}/.aria2/aria2.session
# Save error/unfinished downloads to a file specified by --save-session option every SEC seconds.
# If 0 is given, file will be saved only when aria2 exits. Default: 0
save-session-interval=60
# Set the maximum number of parallel downloads for every queue item.
# See also the --split option. Default: 5
max-concurrent-downloads=5
# Continue downloading a partially downloaded file.
continue=true
# Set max overall download speed in bytes/sec. 0 means unrestricted. Default: 0
max-overall-download-limit=0
# Set max download speed per each download in bytes/sec. 0 means unrestricted. Default: 0
max-download-limit=0
# Make aria2 quiet (no console output). Default: false
quiet=true
# Restart download from scratch if the corresponding control file doesn't exist.
# Default: false
allow-overwrite=true
# If false is given, aria2 aborts download when a piece length is different from one in a control file.
# If true is given, you can proceed but some download progress will be lost. Default: false
allow-piece-length-change=true
# Always resume download. If true is given, aria2 always tries to resume download and if resume is not possible,
# aborts download. If false is given, when all given URIs do not support resume or aria2 encounters N URIs which does not support resume,
# aria2 downloads file from scratch. Default: true
always-resume=true
# Enable asynchronous DNS. Default: true
async-dns=false
# Rename file name if the same file already exists. This option works only in HTTP(S)/FTP download. Default: true
auto-file-renaming=true
# Handle quoted string in Content-Disposition header as UTF-8 instead of ISO-8859-1,
# for example, the filename parameter, but not the extended version filename. Default: false
content-disposition-default-utf8=true
# Enable disk cache. If SIZE is 0, the disk cache is disabled. This feature caches the downloaded data in memory,
# which grows to at most SIZE bytes. SIZE can include K or M. Default: 16M
disk-cache=64M
# Specify file allocation method. none doesn't pre-allocate file space.
# prealloc pre-allocates file space before download begins. This may take some time depending on the size of the file.
# If you are using newer file systems such as ext4 (with extents support), btrfs, xfs or NTFS(MinGW build only), falloc is your best choice.
# It allocates large(few GiB) files almost instantly. Don't use falloc with legacy file systems such as ext3 and FAT32 because it takes almost same time as prealloc and it blocks aria2 entirely until allocation finishes.
# falloc may not be available if your system doesn't have posix_fallocate(3) function.
# trunc uses ftruncate(2) system call or platform-specific counterpart to truncate a file to a specified length.
# Possible Values: none, prealloc, trunc, falloc. Default: prealloc
file-allocation=falloc
# No file allocation is made for files whose size is smaller than SIZE. Default: 5M
no-file-allocation-limit=8

### BitTorrent ###
# Enable BitTorrent download. Default: true
enable-dht=true
enable-peer-exchange=true
bt-tracker=${tracker_url}
# Set maximum number of peers connected with per torrent. Default: 55
bt-max-peers=100
# Set maximum number of active torrents. Default: 5
max-overall-bt-active=20
# Set the number of pieces to request at once from one peer. Default: 5
bt-request-peer-speed-limit=10M
# Set the minimum number of seeders. Download will not start if the number of seeders is below this value. Default: 0
bt-min-seeders=1
# Set the time to keep inactive torrents in memory. Default: 60
bt-stop-timeout=600
# Set the minimum percentage of pieces that a peer should have before accepting it as a seed. Default: 0
bt-seed-ratio=1.0
### BitTorrent ###
# Enable BitTorrent download. Default: true
enable-dht=true
enable-peer-exchange=true
bt-tracker=${tracker_url}
# Set maximum number of peers connected with per torrent. Default: 55
bt-max-peers=100
# Set maximum number of active torrents. Default: 5
max-overall-bt-active=20
# Set the number of pieces to request at once from one peer. Default: 5
bt-request-peer-speed-limit=10M
# Set the minimum number of seeders. Download will not start if the number of seeders is below this value. Default: 0
bt-min-seeders=1
# Set the time to keep inactive torrents in memory. Default: 60
bt-stop-timeout=600
# Set the minimum percentage of pieces that a peer should have before accepting it as a seed. Default: 0
bt-seed-ratio=1.0

### else ###
# The RPC interface allows you to control aria2 remotely.
# You can use the RPC interface via JSON-RPC (over HTTP and HTTPS), XML-RPC, or telnet.
# You can set the port number, listening address, and RPC token using the rpc-listen, rpc-listen-all, rpc-secret, rpc-allow-origin-all options.
rpc-listen-port=6800
rpc-secret=YOUR_SECRET_TOKEN_HERE
rpc-allow-origin-all=true
# Enable checksum validation
check-integrity=true
# Set the maximum number of connections per server
max-connection-per-server=5
# Set the user agent string
user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0
# Enable SFTP support
enable-rpc=true
enable-ftp=true
enable-http=true
enable-https=true
enable-metalink=true
enable-bittorrent=false
enable-dht=false
enable-dht6=false
enable-magnet=false

# Set the proxy server if necessary
# http-proxy=PROXY_SERVER:PORT
# https-proxy=PROXY_SERVER:PORT

# Set the SFTP options if necessary
# sftp-private-key=~/.ssh/id_rsa
# sftp-user=user
# sftp-passwd=pass
# sftp-key-passwd=key-pass
